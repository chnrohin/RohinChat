/*
 * Copyright © Rohin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: rootProject.ext.plugins.application
apply plugin: rootProject.ext.plugins.kotlin
apply plugin: rootProject.ext.plugins.kotlinExtensions
apply plugin: rootProject.ext.plugins.butterknife

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // constraint-layout
    implementation rootProject.ext.dependencies.constraint_layout

    // kotlin
    implementation rootProject.ext.dependencies.kotlin

    // support
    implementation rootProject.ext.dependencies.appcompat_v7
    implementation rootProject.ext.dependencies.support_v4
    implementation rootProject.ext.dependencies.recyclerview_v7
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.support_vector_drawable

    // okhttp
    implementation rootProject.ext.dependencies.okhttp

    // butterknife
    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknife_compiler

    // dagger2
    implementation rootProject.ext.dependencies.dagger
    annotationProcessor rootProject.ext.dependencies.dagger_compiler

    // glide
    implementation rootProject.ext.dependencies.glide

    // log4j
    implementation rootProject.ext.dependencies.log4j

    // TinyPinyin core package，about 80KB
    implementation rootProject.ext.dependencies.tinypinyin
    // Optional, Chinese regional dictionary for Android
    implementation rootProject.ext.dependencies.tinypinyin_lexicons_android_cncity
    // Optional, Chinese regional dictionary for Java
    implementation rootProject.ext.dependencies.tinypinyin_lexicons_java_cncity
}

repositories {
    mavenCentral()
}